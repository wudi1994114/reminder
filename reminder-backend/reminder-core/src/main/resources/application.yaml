# 基本的 Spring Boot 配置
spring:
  application:
    name: reminder
  # Redis配置
  redis:
    host: 123.57.175.66
    port: 6379
    password: Wd941140
    database: 0
    timeout: 10000
    lettuce:
      pool:
        max-active: 8
        max-wait: -1
        max-idle: 8
        min-idle: 0
  # PostgreSQL 数据库配置
  datasource:
    url: jdbc:postgresql://123.57.175.66:5432/remind # 指向你的 PostgreSQL 数据库
    driverClassName: org.postgresql.Driver # PostgreSQL 驱动
    username: your_username # 你的数据库用户名
    password: '123456' # 你的数据库密码
    # 使用Druid连接池配置
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # 连接池配置
      initial-size: 5 # 初始连接数
      min-idle: 5 # 最小连接池数量
      max-active: 20 # 最大连接池数量
      max-wait: 60000 # 获取连接时最大等待时间，单位毫秒
      time-between-eviction-runs-millis: 60000 # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位毫秒
      min-evictable-idle-time-millis: 300000 # 配置一个连接在池中最小生存的时间，单位毫秒
      validation-query: SELECT 1 # 用来检测连接是否有效的sql
      test-while-idle: true # 建议配置为true，不影响性能，并且保证安全性
      test-on-borrow: false # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      test-on-return: false # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      # 配置监控统计拦截的filters
      filters: stat,wall # 监控统计用的filter:stat，日志用的filter:log4j，防御sql注入的filter:wall
      # 配置DruidStatFilter
      web-stat-filter:
        enabled: true
        url-pattern: "/*"
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
      # 配置DruidStatViewServlet
      stat-view-servlet:
        enabled: true # 是否启用StatViewServlet（监控页面）
        url-pattern: "/druid/*" # StatViewServlet的访问路径
        reset-enable: false # 禁用HTML页面上的"Reset All"功能
        login-username: admin # 监控页面登录用户名
        login-password: admin # 监控页面登录密码
        allow: # 允许访问的IP，为空则允许所有访问
        deny: # 拒绝访问的IP
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect # PostgreSQL 方言
    # 禁用自动 DDL (因为我们使用 schema.sql), 推荐 validate 或 none
    hibernate:
      ddl-auto: validate # 或 none
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy # 显式指定命名策略
    # 关闭SQL语句显示
    show-sql: false
    properties:
      hibernate:
        format_sql: false

# 日志配置 - 设置Hibernate日志级别为ERROR以隐藏SQL语句
logging:
  level:
    org.hibernate: ERROR
    org.hibernate.SQL: ERROR
    org.hibernate.type.descriptor.sql: ERROR
    com.alibaba.druid.pool.DruidDataSource: INFO # Druid连接池日志级别
#    org.quartz: DEBUG
#    com.example.reminder.job: DEBUG # 同时确保您自己Job的日志也可见

# JWT Settings
# IMPORTANT: Replace with a strong, base64-encoded secret key for production! (at least 512 bits / 86 chars for HS512)
# Generate one using: `openssl rand -base64 64` or similar secure method.
app:
  jwtSecret: VGhpcyBpcyBhIHZlcnkgc2VjdXJlLCBzdHJvbmcsIGFuZCBzZWNyZXQga2V5IHRoYXQgc2hvdWxkIGJlIG11Y2ggbG9uZ2VyIGFuZCBiZXR0ZXIgZm9yIHByb2R1Y3Rpb24hCg==
  # JWT expiration time in milliseconds (e.g., 1 hour = 3600000, 1 day = 86400000, 7 days = 604800000, 30 days = 2592000000)
  jwtExpirationInMs: 2592000000
  # 前端应用URL，用于邮件中的链接
  frontend-url: http://123.57.175.66

# Gmail Sender Configuration (Placeholders - actual values in application-local.yaml)
gmail:
  client:
    id: YOUR_GMAIL_CLIENT_ID_PLACEHOLDER 
    secret: YOUR_GMAIL_CLIENT_SECRET_PLACEHOLDER
  refresh:
    token: YOUR_GMAIL_REFRESH_TOKEN_PLACEHOLDER
  sender:
    email:
      address: YOUR_GMAIL_SENDER_ADDRESS_PLACEHOLDER 

# 提醒应用配置
reminder:
  # 节假日缓存配置
  holiday:
    cache:
      # 是否启用预加载缓存
      enabled: true
      # 预加载年份范围：当前年份前几年
      years-before: 1
      # 预加载年份范围：当前年份后几年
      years-after: 1
      # 是否在启动时异步预加载（true=异步，false=同步）
      async-preload: false

# 微信小程序配置
wechat:
  miniprogram:
    # 小程序AppID
    appid: wx597f8aaca581205f
    # 小程序AppSecret
    secret: b70c1fd582a6f6d66e8dc1e2e436d023
    # 微信API基础URL
    api-base-url: https://api.weixin.qq.com
    # 获取session_key的URL路径
    jscode2session-url: /sns/jscode2session
    # 连接超时时间（毫秒）
    connect-timeout: 5000
    # 读取超时时间（毫秒）
    read-timeout: 10000
  # 微信通知配置
  notification:
    # 订阅消息模板ID
    template-id: VXTd9P8DUPpM0aM-nLSHSkDC9KTUolBNhkAHV7UkqxQ
    # 默认跳转页面
    page: index
